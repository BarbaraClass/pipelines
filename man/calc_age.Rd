% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{calc_age}
\alias{calc_age}
\title{Calculate age based on when an individual was first captured}
\usage{
calc_age(data, ID, Age, Date, Year, protocol_version = "1.0", showpb = TRUE)
}
\arguments{
\item{data}{Data frame. Data frame with capture information.}

\item{ID}{Unquoted expression (i.e. character without quotation marks). Name
of column with individual identity.}

\item{Age}{Unquoted expression (i.e. character without quotation marks). Name
of column with observed age of individual in each capture. Must be in
EURING codes.}

\item{Date}{Unquoted expression (i.e. character without quotation marks).
Name of column with CaptureDate information. Must be in format dd/mm/yyyy.}

\item{Year}{Unquoted expression (i.e. character without quotation marks).
Name of column with year information. N.B. This could be different to
CaptureDate if we are dealing with species that breed over two year (e.g.
Southern Hemisphere species).}

\item{protocol_version}{Character string. The protocol version of the SPI Birds
standard data being used to process the primary data. Either "1.0" (default), "1.1", or "1.2".}

\item{showpb}{Logical. Should a progress bar be shown?}
}
\value{
A data frame with calculatedAge (v1.0, v1.1) or exactAge and minimumAge (v1.2).
}
\description{
Arrange data by individual and year (or season) and then determine potential age in each
capture.
}
\details{
We only consider whether an individual was captured as a chick or not. We
don't consider the numeric age when an individual was first captured.
This prevents any cases where an individual might be wrongly aged at first capture.

When there is no observed age at first capture we assume it couldn't be a
chick or this would've been recorded.

\strong{Version 1.2}

From version 1.2 onwards, age is stored in two columns, exactAge and minimumAge.
For individuals first captured as chicks, exactAge & minimumAge can be determined;
for individuals first captured as adults, only minimumAge can be determined.

Age is determined as number of seasons since birth (exactAge) or ringing (minimumAge).
The number of seasons equal the number of years for birds that have a single breeding
season per calendar year (i.e., most Northern Hemisphere birds). For other species or
systems (e.g., Southern Hemisphere birds), in which seasons do not follow calendar years,
additional information from data owners is required.

NB: When age is determined using number of years, an individual's age increases before a
full year (i.e., 365/366 days) has passed. This is done because a bird born on, say,
the 1st of June in year 1 is 3 years old in year 4, whether that is just before or just after
the 1st of June in that year. Instead of a full year, we say that an individual ages after
10 months, 1 year and 10 months, etc. after its first capture date.
}
\examples{
library(dplyr)

set.seed(74)

# Version 1.0 or 1.1
bird_data <- tibble::tibble(IndvID = LETTERS[sample(1:26, 100, replace = TRUE)],
                            SampleYear = sample(2012:2016, 100, replace = TRUE),
                            CaptureDate = as.Date(paste(SampleYear, 3, 31, sep = "-"), format = "\%Y-\%m-\%d")
                            + sample(1:30, 100, replace = TRUE),
                            Age_obsv = sample(c(1L, 4L), 100, replace = TRUE)) \%>\%
  calc_age(ID = IndvID, Age = Age_obsv, Date = CaptureDate, Year = SampleYear)

# Version 1.2
# Ringed as chick, no season information
bird_data <- tibble::tibble(captureYear = c(2001, 2002, 2003, 2004),
                            captureMonth = c(5, 5, 4, 1),
                            captureDay = rep(1, 4),
                            individualID = rep("A1", 4),
                            chickAge = c(15, NA, NA, NA)) \%>\%
  calc_age(protocol_version = "1.2")

# Ringed as adult, no season information
bird_data <- tibble::tibble(captureYear = c(2001, 2002, 2003, 2004),
                            captureMonth = c(5, 5, 4, 1),
                            captureDay = rep(1, 4),
                            individualID = rep("A1", 4),
                            chickAge = rep(NA, 4)) \%>\%
  calc_age(protocol_version = "1.2")

# Ringed as chick, season information
bird_data <- tibble::tibble(captureYear = c(2001, 2002, 2003, 2004),
                            captureMonth = c(7, 7, 4, 2),
                            captureDay = rep(1, 4),
                            individualID = rep("A1", 4),
                            chickAge = c(15, NA, NA, NA),
                            season = c(1, 2, 3, 3)) \%>\%
  calc_age(Year = season, protocol_version = "1.2")

# Ringed as adult, season information
bird_data <- tibble::tibble(captureYear = c(2001, 2002, 2003, 2004),
                            captureMonth = c(7, 7, 4, 2),
                            captureDay = rep(1, 4),
                            individualID = rep("A1", 4),
                            chickAge = rep(NA, 4),
                            season = c(1, 2, 3, 3)) \%>\%
  calc_age(Year = season, protocol_version = "1.2")
}
